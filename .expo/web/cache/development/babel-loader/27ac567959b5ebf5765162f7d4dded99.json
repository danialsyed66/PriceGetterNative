{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAIL, GET_POST_REQUEST, GET_POST_SUCCESS, GET_POST_FAIL, LIKE_POST_SUCCESS, LIKE_POST_FAIL, DELETE_POST_SUCCESS, DELETE_POST_FAIL, DELETE_POST_RESET, ADD_POST_SUCCESS, ADD_POST_FAIL, ADD_POST_RESET, DELETE_COMMENT_SUCCESS, DELETE_COMMENT_FAIL, DELETE_COMMENT_RESET, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAIL, ADD_COMMENT_RESET } from \"../consts\";\n\nvar reducer = function reducer() {\n  var _state$post, _state$post$comments;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    posts: [],\n    post: {}\n  };\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case GET_POSTS_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: [],\n        error: null,\n        loading: true\n      });\n\n    case GET_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: {},\n        error: null,\n        loading: true\n      });\n\n    case GET_POSTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: payload,\n        loading: false\n      });\n\n    case GET_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: payload,\n        loading: false\n      });\n\n    case LIKE_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.map(function (post) {\n          return post._id === payload.id ? _objectSpread(_objectSpread({}, post), {}, {\n            likes: payload.likes\n          }) : post;\n        }),\n        post: ((_state$post = state.post) == null ? void 0 : _state$post._id) === (payload == null ? void 0 : payload.id) ? _objectSpread(_objectSpread({}, state.post), {}, {\n          likes: payload.likes\n        }) : state.post\n      });\n\n    case DELETE_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.filter(function (post) {\n          return post._id !== payload;\n        }),\n        message: 'Post Deleted Successfully!'\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: [payload].concat(_toConsumableArray(state.posts)),\n        message: 'Post Added Successfully!'\n      });\n\n    case DELETE_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: _objectSpread(_objectSpread({}, state.post), {}, {\n          comments: (_state$post$comments = state.post.comments) == null ? void 0 : _state$post$comments.filter(function (comment) {\n            return comment._id !== payload;\n          })\n        }),\n        message: 'Comment Deleted Successfully!'\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: _objectSpread(_objectSpread({}, state.post), {}, {\n          comments: payload\n        }),\n        message: 'Comment Added Successfully!'\n      });\n\n    case GET_POSTS_FAIL:\n    case GET_POST_FAIL:\n    case LIKE_POST_FAIL:\n    case DELETE_POST_FAIL:\n    case ADD_POST_FAIL:\n    case DELETE_COMMENT_FAIL:\n    case ADD_COMMENT_FAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: payload,\n        loading: false\n      });\n\n    case DELETE_POST_RESET:\n    case ADD_POST_RESET:\n    case DELETE_COMMENT_RESET:\n    case ADD_COMMENT_RESET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        message: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_FAIL","GET_POST_REQUEST","GET_POST_SUCCESS","GET_POST_FAIL","LIKE_POST_SUCCESS","LIKE_POST_FAIL","DELETE_POST_SUCCESS","DELETE_POST_FAIL","DELETE_POST_RESET","ADD_POST_SUCCESS","ADD_POST_FAIL","ADD_POST_RESET","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAIL","DELETE_COMMENT_RESET","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAIL","ADD_COMMENT_RESET","reducer","state","posts","post","type","payload","error","loading","map","_id","id","likes","filter","message","comments","comment"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/redux/reducers/forumsReducer.js"],"sourcesContent":["import {\r\n  GET_POSTS_REQUEST,\r\n  GET_POSTS_SUCCESS,\r\n  GET_POSTS_FAIL,\r\n  GET_POST_REQUEST,\r\n  GET_POST_SUCCESS,\r\n  GET_POST_FAIL,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAIL,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_FAIL,\r\n  DELETE_POST_RESET,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAIL,\r\n  ADD_POST_RESET,\r\n  DELETE_COMMENT_SUCCESS,\r\n  DELETE_COMMENT_FAIL,\r\n  DELETE_COMMENT_RESET,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAIL,\r\n  ADD_COMMENT_RESET,\r\n} from '../consts';\r\n\r\nconst reducer = (state = { posts: [], post: {} }, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_POSTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        error: null,\r\n        loading: true,\r\n      };\r\n\r\n    case GET_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        post: {},\r\n        error: null,\r\n        loading: true,\r\n      };\r\n\r\n    case GET_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case LIKE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        post:\r\n          state.post?._id === payload?.id\r\n            ? { ...state.post, likes: payload.likes }\r\n            : state.post,\r\n      };\r\n\r\n    case DELETE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== payload),\r\n        message: 'Post Deleted Successfully!',\r\n      };\r\n\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        message: 'Post Added Successfully!',\r\n      };\r\n\r\n    case DELETE_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments?.filter(\r\n            comment => comment._id !== payload\r\n          ),\r\n        },\r\n        message: 'Comment Deleted Successfully!',\r\n      };\r\n\r\n    case ADD_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        message: 'Comment Added Successfully!',\r\n      };\r\n\r\n    case GET_POSTS_FAIL:\r\n    case GET_POST_FAIL:\r\n    case LIKE_POST_FAIL:\r\n    case DELETE_POST_FAIL:\r\n    case ADD_POST_FAIL:\r\n    case DELETE_COMMENT_FAIL:\r\n    case ADD_COMMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case DELETE_POST_RESET:\r\n    case ADD_POST_RESET:\r\n    case DELETE_COMMENT_RESET:\r\n    case ADD_COMMENT_RESET:\r\n      return {\r\n        ...state,\r\n        message: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}