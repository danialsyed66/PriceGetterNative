{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Entypo, AntDesign, Fontisto } from \"@expo/vector-icons\";\nimport styles from \"./styles\";\nimport Icon from \"../../Icon\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { COLORS } from \"../../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Nav = function Nav() {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useRoute = useRoute(),\n      routeName = _useRoute.name;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isKeyboardVisible = _useState2[0],\n      setKeyboardVisible = _useState2[1];\n\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardVisible(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardVisible(false);\n    });\n    return function () {\n      keyboardDidHideListener.remove();\n      keyboardDidShowListener.remove();\n    };\n  }, []);\n  var active = {\n    color: COLORS.green,\n    borderColor: COLORS.green,\n    borderWidth: 1\n  };\n  return _jsx(_Fragment, {\n    children: isKeyboardVisible ? null : _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: {\n          height: '8%'\n        }\n      }), _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: styles.icons,\n          children: [_jsx(Icon, {\n            element: AntDesign,\n            name: \"home\",\n            onPress: function onPress() {\n              return navigate('Home');\n            },\n            style: ['Home', 'Product Details'].includes(routeName) && active\n          }), _jsx(Icon, {\n            element: Fontisto,\n            name: \"shopping-sale\",\n            type: \"primary\"\n          }), _jsx(Icon, {\n            element: AntDesign,\n            name: \"shoppingcart\",\n            onPress: function onPress() {\n              return navigate('Cart');\n            },\n            style: ['Cart', 'Payment'].includes(routeName) && active\n          }), _jsx(Icon, {\n            element: AntDesign,\n            name: \"login\",\n            type: \"primary\",\n            onPress: function onPress() {\n              return navigate('Sign In');\n            },\n            style: ['Sign In', 'Sign Up'].includes(routeName) && active\n          })]\n        })\n      })]\n    })\n  });\n};\n\nexport default Nav;","map":{"version":3,"names":["React","useEffect","useState","Entypo","AntDesign","Fontisto","styles","Icon","useNavigation","useRoute","COLORS","Nav","navigate","routeName","name","isKeyboardVisible","setKeyboardVisible","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","active","color","green","borderColor","borderWidth","height","container","icons","includes"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/components/layouts/Nav/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Keyboard } from 'react-native';\r\nimport { Entypo, AntDesign, Fontisto } from 'react-native-vector-icons';\r\n\r\nimport styles from './styles';\r\nimport Icon from '../../Icon';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { COLORS } from '../../../utils';\r\n\r\nconst Nav = () => {\r\n  const { navigate } = useNavigation();\r\n  const { name: routeName } = useRoute();\r\n\r\n  const [isKeyboardVisible, setKeyboardVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const keyboardDidShowListener = Keyboard.addListener(\r\n      'keyboardDidShow',\r\n      () => {\r\n        setKeyboardVisible(true); // or some other action\r\n      }\r\n    );\r\n    const keyboardDidHideListener = Keyboard.addListener(\r\n      'keyboardDidHide',\r\n      () => {\r\n        setKeyboardVisible(false); // or some other action\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      keyboardDidHideListener.remove();\r\n      keyboardDidShowListener.remove();\r\n    };\r\n  }, []);\r\n\r\n  const active = {\r\n    color: COLORS.green,\r\n    borderColor: COLORS.green,\r\n    borderWidth: 1,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isKeyboardVisible ? null : (\r\n        <>\r\n          <View style={{ height: '8%' }}></View>\r\n          <View style={styles.container}>\r\n            <View style={styles.icons}>\r\n              <Icon\r\n                element={AntDesign}\r\n                name=\"home\"\r\n                onPress={() => navigate('Home')}\r\n                style={\r\n                  ['Home', 'Product Details'].includes(routeName) && active\r\n                }\r\n              />\r\n              <Icon element={Fontisto} name=\"shopping-sale\" type=\"primary\" />\r\n              <Icon\r\n                element={AntDesign}\r\n                name=\"shoppingcart\"\r\n                onPress={() => navigate('Cart')}\r\n                style={['Cart', 'Payment'].includes(routeName) && active}\r\n              />\r\n              <Icon\r\n                element={AntDesign}\r\n                name=\"login\"\r\n                type=\"primary\"\r\n                onPress={() => navigate('Sign In')}\r\n                style={['Sign In', 'Sign Up'].includes(routeName) && active}\r\n              />\r\n              {/* <Icon element={MaterialCommunityIcons} name=\"account\" type=\"primary\" /> */}\r\n              {/* <Icon element={AntDesign} name=\"logout\" type=\"primary\" /> */}\r\n            </View>\r\n          </View>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B;AAEA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;AACA,SAASC,MAAT;;;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,qBAAqBH,aAAa,EAAlC;EAAA,IAAQI,QAAR,kBAAQA,QAAR;;EACA,gBAA4BH,QAAQ,EAApC;EAAA,IAAcI,SAAd,aAAQC,IAAR;;EAEA,gBAAgDZ,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAOa,iBAAP;EAAA,IAA0BC,kBAA1B;;EAEAf,SAAS,CAAC,YAAM;IACd,IAAMgB,uBAAuB,GAAGC,QAAQ,CAACC,WAAT,CAC9B,iBAD8B,EAE9B,YAAM;MACJH,kBAAkB,CAAC,IAAD,CAAlB;IACD,CAJ6B,CAAhC;IAMA,IAAMI,uBAAuB,GAAGF,QAAQ,CAACC,WAAT,CAC9B,iBAD8B,EAE9B,YAAM;MACJH,kBAAkB,CAAC,KAAD,CAAlB;IACD,CAJ6B,CAAhC;IAOA,OAAO,YAAM;MACXI,uBAAuB,CAACC,MAAxB;MACAJ,uBAAuB,CAACI,MAAxB;IACD,CAHD;EAID,CAlBQ,EAkBN,EAlBM,CAAT;EAoBA,IAAMC,MAAM,GAAG;IACbC,KAAK,EAAEb,MAAM,CAACc,KADD;IAEbC,WAAW,EAAEf,MAAM,CAACc,KAFP;IAGbE,WAAW,EAAE;EAHA,CAAf;EAMA,OACE;IAAA,UACGX,iBAAiB,GAAG,IAAH,GAChB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEY,MAAM,EAAE;QAAV;MAAb,EADF,EAEE,KAAC,IAAD;QAAM,KAAK,EAAErB,MAAM,CAACsB,SAApB;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAEtB,MAAM,CAACuB,KAApB;UAAA,WACE,KAAC,IAAD;YACE,OAAO,EAAEzB,SADX;YAEE,IAAI,EAAC,MAFP;YAGE,OAAO,EAAE;cAAA,OAAMQ,QAAQ,CAAC,MAAD,CAAd;YAAA,CAHX;YAIE,KAAK,EACH,CAAC,MAAD,EAAS,iBAAT,EAA4BkB,QAA5B,CAAqCjB,SAArC,KAAmDS;UALvD,EADF,EASE,KAAC,IAAD;YAAM,OAAO,EAAEjB,QAAf;YAAyB,IAAI,EAAC,eAA9B;YAA8C,IAAI,EAAC;UAAnD,EATF,EAUE,KAAC,IAAD;YACE,OAAO,EAAED,SADX;YAEE,IAAI,EAAC,cAFP;YAGE,OAAO,EAAE;cAAA,OAAMQ,QAAQ,CAAC,MAAD,CAAd;YAAA,CAHX;YAIE,KAAK,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoBkB,QAApB,CAA6BjB,SAA7B,KAA2CS;UAJpD,EAVF,EAgBE,KAAC,IAAD;YACE,OAAO,EAAElB,SADX;YAEE,IAAI,EAAC,OAFP;YAGE,IAAI,EAAC,SAHP;YAIE,OAAO,EAAE;cAAA,OAAMQ,QAAQ,CAAC,SAAD,CAAd;YAAA,CAJX;YAKE,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuBkB,QAAvB,CAAgCjB,SAAhC,KAA8CS;UALvD,EAhBF;QAAA;MADF,EAFF;IAAA;EAFJ,EADF;AAqCD,CArED;;AAuEA,eAAeX,GAAf"},"metadata":{},"sourceType":"module"}