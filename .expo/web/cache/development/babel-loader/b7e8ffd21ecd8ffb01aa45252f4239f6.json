{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport styles from \"./styles\";\nimport { COLORS } from \"../../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FormInput = function FormInput(_ref) {\n  var containerStyle = _ref.containerStyle,\n      inputContainerStyle = _ref.inputContainerStyle,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      inputStyle = _ref.inputStyle,\n      prependComponent = _ref.prependComponent,\n      appendComponent = _ref.appendComponent,\n      onChange = _ref.onChange,\n      secureTextEntry = _ref.secureTextEntry,\n      _ref$keyboardType = _ref.keyboardType,\n      keyboardType = _ref$keyboardType === void 0 ? 'default' : _ref$keyboardType,\n      _ref$autoCompleteType = _ref.autoCompleteType,\n      autoCompleteType = _ref$autoCompleteType === void 0 ? 'off' : _ref$autoCompleteType,\n      _ref$autoCapitalize = _ref.autoCapitalize,\n      autoCapitalize = _ref$autoCapitalize === void 0 ? 'none' : _ref$autoCapitalize,\n      _ref$errorMsg = _ref.errorMsg,\n      errorMsg = _ref$errorMsg === void 0 ? '' : _ref$errorMsg;\n  return _jsxs(View, {\n    style: containerStyle,\n    children: [_jsxs(View, {\n      style: styles.lebelContainer,\n      children: [_jsx(Text, {\n        style: styles.lebel,\n        children: label\n      }), _jsx(Text, {\n        style: styles.errorMsg,\n        children: errorMsg\n      })]\n    }), _jsxs(View, {\n      style: [styles.inputContainer, inputContainerStyle],\n      children: [prependComponent, _jsx(TextInput, {\n        style: [styles.input, inputStyle],\n        placeholder: placeholder,\n        placeholderTextColor: COLORS.gray,\n        secureTextEntry: secureTextEntry,\n        keyboardType: keyboardType,\n        autoCompleteType: autoCompleteType,\n        autoCapitalize: autoCapitalize,\n        onChangeText: function onChangeText(text) {\n          return onChange(text);\n        }\n      }), appendComponent]\n    })]\n  });\n};\n\nexport default FormInput;","map":{"version":3,"names":["React","styles","COLORS","FormInput","containerStyle","inputContainerStyle","label","placeholder","inputStyle","prependComponent","appendComponent","onChange","secureTextEntry","keyboardType","autoCompleteType","autoCapitalize","errorMsg","lebelContainer","lebel","inputContainer","input","gray","text"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/components/users/FormInput/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TextInput } from 'react-native';\r\n\r\nimport styles from './styles';\r\nimport { COLORS } from '../../../utils';\r\n\r\nconst FormInput = ({\r\n  containerStyle,\r\n  inputContainerStyle,\r\n  label,\r\n  placeholder,\r\n  inputStyle,\r\n  prependComponent,\r\n  appendComponent,\r\n  onChange,\r\n  secureTextEntry,\r\n  keyboardType = 'default',\r\n  autoCompleteType = 'off',\r\n  autoCapitalize = 'none',\r\n  errorMsg = '',\r\n}) => {\r\n  return (\r\n    <View style={containerStyle}>\r\n      <View style={styles.lebelContainer}>\r\n        <Text style={styles.lebel}>{label}</Text>\r\n        <Text style={styles.errorMsg}>{errorMsg}</Text>\r\n      </View>\r\n\r\n      <View style={[styles.inputContainer, inputContainerStyle]}>\r\n        {prependComponent}\r\n\r\n        <TextInput\r\n          style={[styles.input, inputStyle]}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={COLORS.gray}\r\n          secureTextEntry={secureTextEntry}\r\n          keyboardType={keyboardType}\r\n          autoCompleteType={autoCompleteType}\r\n          autoCapitalize={autoCapitalize}\r\n          onChangeText={text => onChange(text)}\r\n        />\r\n\r\n        {appendComponent}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAOC,MAAP;AACA,SAASC,MAAT;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAcZ;EAAA,IAbJC,cAaI,QAbJA,cAaI;EAAA,IAZJC,mBAYI,QAZJA,mBAYI;EAAA,IAXJC,KAWI,QAXJA,KAWI;EAAA,IAVJC,WAUI,QAVJA,WAUI;EAAA,IATJC,UASI,QATJA,UASI;EAAA,IARJC,gBAQI,QARJA,gBAQI;EAAA,IAPJC,eAOI,QAPJA,eAOI;EAAA,IANJC,QAMI,QANJA,QAMI;EAAA,IALJC,eAKI,QALJA,eAKI;EAAA,6BAJJC,YAII;EAAA,IAJJA,YAII,kCAJW,SAIX;EAAA,iCAHJC,gBAGI;EAAA,IAHJA,gBAGI,sCAHe,KAGf;EAAA,+BAFJC,cAEI;EAAA,IAFJA,cAEI,oCAFa,MAEb;EAAA,yBADJC,QACI;EAAA,IADJA,QACI,8BADO,EACP;EACJ,OACE,MAAC,IAAD;IAAM,KAAK,EAAEZ,cAAb;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAEH,MAAM,CAACgB,cAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEhB,MAAM,CAACiB,KAApB;QAAA,UAA4BZ;MAA5B,EADF,EAEE,KAAC,IAAD;QAAM,KAAK,EAAEL,MAAM,CAACe,QAApB;QAAA,UAA+BA;MAA/B,EAFF;IAAA,EADF,EAME,MAAC,IAAD;MAAM,KAAK,EAAE,CAACf,MAAM,CAACkB,cAAR,EAAwBd,mBAAxB,CAAb;MAAA,WACGI,gBADH,EAGE,KAAC,SAAD;QACE,KAAK,EAAE,CAACR,MAAM,CAACmB,KAAR,EAAeZ,UAAf,CADT;QAEE,WAAW,EAAED,WAFf;QAGE,oBAAoB,EAAEL,MAAM,CAACmB,IAH/B;QAIE,eAAe,EAAET,eAJnB;QAKE,YAAY,EAAEC,YALhB;QAME,gBAAgB,EAAEC,gBANpB;QAOE,cAAc,EAAEC,cAPlB;QAQE,YAAY,EAAE,sBAAAO,IAAI;UAAA,OAAIX,QAAQ,CAACW,IAAD,CAAZ;QAAA;MARpB,EAHF,EAcGZ,eAdH;IAAA,EANF;EAAA,EADF;AAyBD,CAxCD;;AA0CA,eAAeP,SAAf"},"metadata":{},"sourceType":"module"}