{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nimport Logo from \"../../Logo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Layout = function Layout(_ref) {\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      titleContainerStyle = _ref.titleContainerStyle,\n      children = _ref.children;\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardVisible(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardVisible(false);\n    });\n    return function () {\n      keyboardDidHideListener.remove();\n      keyboardDidShowListener.remove();\n    };\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: {\n        flex: 1\n      },\n      children: _jsxs(KeyboardAwareScrollView, {\n        contentContainerStyle: [styles.scrollContainer, {\n          flex: 1\n        }],\n        ref: function ref(_ref2) {\n          return scrollView = _ref2;\n        },\n        children: [_jsx(Logo, {\n          touchStyles: styles.logoTouch\n        }), _jsx(View, {\n          style: [styles.titleContainer, titleContainerStyle],\n          children: _jsx(Text, {\n            style: styles.titleText,\n            children: title\n          })\n        }), children]\n      })\n    })\n  });\n};\n\nexport default Layout;","map":{"version":3,"names":["React","useEffect","KeyboardAwareScrollView","styles","Logo","Layout","title","subtitle","titleContainerStyle","children","keyboardDidShowListener","Keyboard","addListener","setKeyboardVisible","keyboardDidHideListener","remove","container","Platform","OS","flex","scrollContainer","ref","scrollView","logoTouch","titleContainer","titleText"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/components/users/Layout/index.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  Platform,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport styles from './styles';\r\nimport Logo from '../../Logo';\r\n\r\nconst Layout = ({ title, subtitle, titleContainerStyle, children }) => {\r\n  useEffect(() => {\r\n    const keyboardDidShowListener = Keyboard.addListener(\r\n      'keyboardDidShow',\r\n      () => {\r\n        setKeyboardVisible(true); // or some other action\r\n      }\r\n    );\r\n    const keyboardDidHideListener = Keyboard.addListener(\r\n      'keyboardDidHide',\r\n      () => {\r\n        setKeyboardVisible(false); // or some other action\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      keyboardDidHideListener.remove();\r\n      keyboardDidShowListener.remove();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={{ flex: 1 }}\r\n      >\r\n        {/* <TouchableWithoutFeedback onPress={Keyboard.dismiss}> */}\r\n        <KeyboardAwareScrollView\r\n          // keyboardDismissMode=\"on-drag\"\r\n          contentContainerStyle={[styles.scrollContainer, { flex: 1 }]}\r\n          ref={ref => (scrollView = ref)}\r\n        >\r\n          <Logo touchStyles={styles.logoTouch} />\r\n          {/* <Logo /> */}\r\n\r\n          <View style={[styles.titleContainer, titleContainerStyle]}>\r\n            <Text style={styles.titleText}>{title}</Text>\r\n          </View>\r\n\r\n          {children}\r\n        </KeyboardAwareScrollView>\r\n        {/* </TouchableWithoutFeedback> */}\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AASA,SAASC,uBAAT,QAAwC,yCAAxC;AAEA,OAAOC,MAAP;AACA,OAAOC,IAAP;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAwD;EAAA,IAArDC,KAAqD,QAArDA,KAAqD;EAAA,IAA9CC,QAA8C,QAA9CA,QAA8C;EAAA,IAApCC,mBAAoC,QAApCA,mBAAoC;EAAA,IAAfC,QAAe,QAAfA,QAAe;EACrER,SAAS,CAAC,YAAM;IACd,IAAMS,uBAAuB,GAAGC,QAAQ,CAACC,WAAT,CAC9B,iBAD8B,EAE9B,YAAM;MACJC,kBAAkB,CAAC,IAAD,CAAlB;IACD,CAJ6B,CAAhC;IAMA,IAAMC,uBAAuB,GAAGH,QAAQ,CAACC,WAAT,CAC9B,iBAD8B,EAE9B,YAAM;MACJC,kBAAkB,CAAC,KAAD,CAAlB;IACD,CAJ6B,CAAhC;IAOA,OAAO,YAAM;MACXC,uBAAuB,CAACC,MAAxB;MACAL,uBAAuB,CAACK,MAAxB;IACD,CAHD;EAID,CAlBQ,EAkBN,EAlBM,CAAT;EAoBA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEZ,MAAM,CAACa,SAApB;IAAA,UACE,KAAC,oBAAD;MACE,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QADhD;MAEE,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAR,CAFT;MAAA,UAKE,MAAC,uBAAD;QAEE,qBAAqB,EAAE,CAAChB,MAAM,CAACiB,eAAR,EAAyB;UAAED,IAAI,EAAE;QAAR,CAAzB,CAFzB;QAGE,GAAG,EAAE,aAAAE,KAAG;UAAA,OAAKC,UAAU,GAAGD,KAAlB;QAAA,CAHV;QAAA,WAKE,KAAC,IAAD;UAAM,WAAW,EAAElB,MAAM,CAACoB;QAA1B,EALF,EAQE,KAAC,IAAD;UAAM,KAAK,EAAE,CAACpB,MAAM,CAACqB,cAAR,EAAwBhB,mBAAxB,CAAb;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEL,MAAM,CAACsB,SAApB;YAAA,UAAgCnB;UAAhC;QADF,EARF,EAYGG,QAZH;MAAA;IALF;EADF,EADF;AAyBD,CA9CD;;AAgDA,eAAeJ,MAAf"},"metadata":{},"sourceType":"module"}