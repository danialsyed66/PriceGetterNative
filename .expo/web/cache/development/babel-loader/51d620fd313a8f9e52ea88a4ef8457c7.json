{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Feather } from \"@expo/vector-icons\";\nimport styles from \"./styles\";\nimport icons from \"./icons\";\nimport Icon from \"../Icon\";\nimport { setFilters } from \"../../../redux/actions/filterActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Category = function Category() {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var handleNavigate = function handleNavigate(category) {};\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      more = _useState2[0],\n      setMore = _useState2[1];\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.titleText,\n        children: \"Categories\"\n      }), _jsx(View, {\n        style: styles.contentContainer,\n        children: icons.map(function (_ref, index) {\n          var src = _ref.src,\n              text = _ref.text,\n              val = _ref.val;\n          return _jsxs(TouchableOpacity, {\n            style: styles.itemContainer,\n            onClick: function onClick() {\n              return handleNavigate(val);\n            },\n            children: [_jsx(Image, {\n              source: src,\n              style: styles.image\n            }), _jsx(Text, {\n              style: styles.text,\n              children: text\n            })]\n          }, index);\n        })\n      }), _jsx(View, {\n        style: styles.more,\n        children: _jsxs(View, {\n          style: styles.moreIcons,\n          children: [_jsx(View, {\n            style: styles.ruler\n          }), _jsx(Icon, {\n            element: Feather,\n            name: \"chevrons-down\",\n            onPress: function onPress() {}\n          }), _jsx(View, {\n            style: styles.ruler\n          })]\n        })\n      })]\n    })\n  });\n};\n\nexport default Category;","map":{"version":3,"names":["React","useNavigation","Feather","styles","icons","Icon","setFilters","Category","navigate","handleNavigate","category","useState","more","setMore","container","titleText","contentContainer","map","index","src","text","val","itemContainer","image","moreIcons","ruler"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/components/layouts/Category/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Feather } from 'react-native-vector-icons';\r\n\r\nimport styles from './styles';\r\nimport icons from './icons';\r\nimport Icon from '../Icon';\r\nimport { setFilters } from '../../../redux/actions/filterActions';\r\n\r\nconst Category = () => {\r\n  const { navigate } = useNavigation();\r\n\r\n  const handleNavigate = category => {\r\n    // dispatch(setFilters({ categories: [category] }));\r\n    // navigate('/filter?nav=true');\r\n  };\r\n\r\n  const [more, setMore] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <Text style={styles.titleText}>Categories</Text>\r\n\r\n        <View style={styles.contentContainer}>\r\n          {icons.map(({ src, text, val }, index) => (\r\n            <TouchableOpacity\r\n              style={styles.itemContainer}\r\n              key={index}\r\n              onClick={() => handleNavigate(val)}\r\n            >\r\n              <Image source={src} style={styles.image} />\r\n\r\n              <Text style={styles.text}>{text}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={styles.more}>\r\n          <View style={styles.moreIcons}>\r\n            <View style={styles.ruler}></View>\r\n            <Icon element={Feather} name=\"chevrons-down\" onPress={() => {}} />\r\n            <View style={styles.ruler}></View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,SAASC,UAAT;;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,qBAAqBN,aAAa,EAAlC;EAAA,IAAQO,QAAR,kBAAQA,QAAR;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ,EAAI,CAGlC,CAHD;;EAKA,gBAAwBC,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAEA,OACE;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEV,MAAM,CAACW,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEX,MAAM,CAACY,SAApB;QAAA;MAAA,EADF,EAGE,KAAC,IAAD;QAAM,KAAK,EAAEZ,MAAM,CAACa,gBAApB;QAAA,UACGZ,KAAK,CAACa,GAAN,CAAU,gBAAqBC,KAArB;UAAA,IAAGC,GAAH,QAAGA,GAAH;UAAA,IAAQC,IAAR,QAAQA,IAAR;UAAA,IAAcC,GAAd,QAAcA,GAAd;UAAA,OACT,MAAC,gBAAD;YACE,KAAK,EAAElB,MAAM,CAACmB,aADhB;YAGE,OAAO,EAAE;cAAA,OAAMb,cAAc,CAACY,GAAD,CAApB;YAAA,CAHX;YAAA,WAKE,KAAC,KAAD;cAAO,MAAM,EAAEF,GAAf;cAAoB,KAAK,EAAEhB,MAAM,CAACoB;YAAlC,EALF,EAOE,KAAC,IAAD;cAAM,KAAK,EAAEpB,MAAM,CAACiB,IAApB;cAAA,UAA2BA;YAA3B,EAPF;UAAA,GAEOF,KAFP,CADS;QAAA,CAAV;MADH,EAHF,EAiBE,KAAC,IAAD;QAAM,KAAK,EAAEf,MAAM,CAACS,IAApB;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAET,MAAM,CAACqB,SAApB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAErB,MAAM,CAACsB;UAApB,EADF,EAEE,KAAC,IAAD;YAAM,OAAO,EAAEvB,OAAf;YAAwB,IAAI,EAAC,eAA7B;YAA6C,OAAO,EAAE,mBAAM,CAAE;UAA9D,EAFF,EAGE,KAAC,IAAD;YAAM,KAAK,EAAEC,MAAM,CAACsB;UAApB,EAHF;QAAA;MADF,EAjBF;IAAA;EADF,EADF;AA6BD,CAvCD;;AAyCA,eAAelB,QAAf"},"metadata":{},"sourceType":"module"}