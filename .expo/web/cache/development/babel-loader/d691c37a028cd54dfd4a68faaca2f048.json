{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Feather } from \"@expo/vector-icons\";\nimport styles from \"./styles\";\nimport icons from \"./icons\";\nimport Icon from \"../Icon\";\nimport { setFilters } from \"../../../redux/actions/filterActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Category = function Category() {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var handleNavigate = function handleNavigate(category) {};\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      more = _useState2[0],\n      setMore = _useState2[1];\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.titleText,\n        children: \"Categories\"\n      }), _jsx(View, {\n        style: styles.contentContainer,\n        children: icons.map(function (_ref, index) {\n          var src = _ref.src,\n              text = _ref.text,\n              val = _ref.val;\n          if (!more && index > 2) return null;\n          return _jsxs(TouchableOpacity, {\n            style: styles.itemContainer,\n            onClick: function onClick() {\n              return handleNavigate(val);\n            },\n            children: [_jsx(Image, {\n              source: src,\n              style: styles.image\n            }), _jsx(Text, {\n              style: styles.text,\n              children: text\n            })]\n          }, index);\n        })\n      }), _jsx(View, {\n        style: styles.more,\n        children: _jsxs(View, {\n          style: styles.moreIcons,\n          children: [_jsx(View, {\n            style: styles.ruler\n          }), _jsx(Icon, {\n            element: Feather,\n            name: \"chevrons-down\",\n            onPress: function onPress() {}\n          }), _jsx(View, {\n            style: styles.ruler\n          })]\n        })\n      })]\n    })\n  });\n};\n\nexport default Category;","map":{"version":3,"names":["React","useState","useNavigation","Feather","styles","icons","Icon","setFilters","Category","navigate","handleNavigate","category","more","setMore","container","titleText","contentContainer","map","index","src","text","val","itemContainer","image","moreIcons","ruler"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/components/layouts/Category/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Feather } from 'react-native-vector-icons';\r\n\r\nimport styles from './styles';\r\nimport icons from './icons';\r\nimport Icon from '../Icon';\r\nimport { setFilters } from '../../../redux/actions/filterActions';\r\n\r\nconst Category = () => {\r\n  const { navigate } = useNavigation();\r\n\r\n  const handleNavigate = category => {\r\n    // dispatch(setFilters({ categories: [category] }));\r\n    // navigate('/filter?nav=true');\r\n  };\r\n\r\n  const [more, setMore] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <Text style={styles.titleText}>Categories</Text>\r\n\r\n        <View style={styles.contentContainer}>\r\n          {icons.map(({ src, text, val }, index) => {\r\n            if (!more && index > 2) return null;\r\n\r\n            return (\r\n              <TouchableOpacity\r\n                style={styles.itemContainer}\r\n                key={index}\r\n                onClick={() => handleNavigate(val)}\r\n              >\r\n                <Image source={src} style={styles.image} />\r\n\r\n                <Text style={styles.text}>{text}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n\r\n        <View style={styles.more}>\r\n          <View style={styles.moreIcons}>\r\n            <View style={styles.ruler}></View>\r\n            <Icon element={Feather} name=\"chevrons-down\" onPress={() => {}} />\r\n            <View style={styles.ruler}></View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,SAASC,UAAT;;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,qBAAqBN,aAAa,EAAlC;EAAA,IAAQO,QAAR,kBAAQA,QAAR;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ,EAAI,CAGlC,CAHD;;EAKA,gBAAwBV,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOW,IAAP;EAAA,IAAaC,OAAb;;EAEA,OACE;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAET,MAAM,CAACU,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEV,MAAM,CAACW,SAApB;QAAA;MAAA,EADF,EAGE,KAAC,IAAD;QAAM,KAAK,EAAEX,MAAM,CAACY,gBAApB;QAAA,UACGX,KAAK,CAACY,GAAN,CAAU,gBAAqBC,KAArB,EAA+B;UAAA,IAA5BC,GAA4B,QAA5BA,GAA4B;UAAA,IAAvBC,IAAuB,QAAvBA,IAAuB;UAAA,IAAjBC,GAAiB,QAAjBA,GAAiB;UACxC,IAAI,CAACT,IAAD,IAASM,KAAK,GAAG,CAArB,EAAwB,OAAO,IAAP;UAExB,OACE,MAAC,gBAAD;YACE,KAAK,EAAEd,MAAM,CAACkB,aADhB;YAGE,OAAO,EAAE;cAAA,OAAMZ,cAAc,CAACW,GAAD,CAApB;YAAA,CAHX;YAAA,WAKE,KAAC,KAAD;cAAO,MAAM,EAAEF,GAAf;cAAoB,KAAK,EAAEf,MAAM,CAACmB;YAAlC,EALF,EAOE,KAAC,IAAD;cAAM,KAAK,EAAEnB,MAAM,CAACgB,IAApB;cAAA,UAA2BA;YAA3B,EAPF;UAAA,GAEOF,KAFP,CADF;QAWD,CAdA;MADH,EAHF,EAqBE,KAAC,IAAD;QAAM,KAAK,EAAEd,MAAM,CAACQ,IAApB;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAER,MAAM,CAACoB,SAApB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAEpB,MAAM,CAACqB;UAApB,EADF,EAEE,KAAC,IAAD;YAAM,OAAO,EAAEtB,OAAf;YAAwB,IAAI,EAAC,eAA7B;YAA6C,OAAO,EAAE,mBAAM,CAAE;UAA9D,EAFF,EAGE,KAAC,IAAD;YAAM,KAAK,EAAEC,MAAM,CAACqB;UAApB,EAHF;QAAA;MADF,EArBF;IAAA;EADF,EADF;AAiCD,CA3CD;;AA6CA,eAAejB,QAAf"},"metadata":{},"sourceType":"module"}