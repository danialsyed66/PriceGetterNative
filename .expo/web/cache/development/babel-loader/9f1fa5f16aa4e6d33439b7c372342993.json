{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Entypo, AntDesign } from \"@expo/vector-icons\";\nimport styles from \"./styles\";\nimport { AuthLayout, FormInput, TextButton } from \"../../../components\";\nimport { COLORS2 as COLORS, validateEmail } from \"../../../utils\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignIn = function SignIn() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailError = _useState6[0],\n      setEmailError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPassword = _useState8[0],\n      setShowPassword = _useState8[1];\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  return _jsxs(AuthLayout, {\n    title: \"Sign In\",\n    children: [_jsx(FormInput, {\n      label: \"Email\",\n      keyboardType: \"email-address\",\n      autoCompleteType: \"email\",\n      onChange: function onChange(value) {\n        validateEmail(value, setEmailError);\n        setEmail(value);\n      },\n      errorMsg: emailError,\n      appendComponent: _jsx(View, {\n        style: styles.emailAppendContainer,\n        children: _jsx(AntDesign, {\n          name: 'checkcircle',\n          style: {\n            height: 20,\n            width: 20,\n            color: email === '' ? COLORS.grey : email !== '' && emailError === '' ? COLORS.green : COLORS.red,\n            fontSize: 21\n          }\n        })\n      })\n    }), _jsx(FormInput, {\n      label: \"Password\",\n      secureTextEntry: !showPassword,\n      autoCompleteType: \"password\",\n      containerStyle: styles.passwordContainer,\n      onChange: function onChange(value) {\n        return setPassword(value);\n      },\n      appendComponent: _jsx(TouchableOpacity, {\n        style: styles.passwordAppendContainer,\n        onPress: function onPress() {\n          return setShowPassword(!showPassword);\n        },\n        children: _jsx(Entypo, {\n          name: showPassword ? 'eye-with-line' : 'eye',\n          style: styles.passwordAppendImage\n        })\n      })\n    }), _jsx(TextButton, {\n      text: \"Forgot Password?\",\n      containerStyle: styles.fogotPasswordComponent,\n      touchStyle: null,\n      textStyle: styles.fogotPasswordText\n    }), _jsx(TextButton, {\n      onPress: function onPress() {},\n      text: \"Sign In\"\n    }), _jsxs(View, {\n      style: styles.signUpContainer,\n      children: [_jsx(Text, {\n        children: \"Don't have an account? \"\n      }), _jsx(TextButton, {\n        text: \"Sign Up\",\n        containerStyle: styles.fogotPasswordComponent,\n        touchStyle: null,\n        textStyle: styles.fogotPasswordText\n      })]\n    })]\n  });\n};\n\nexport default SignIn;","map":{"version":3,"names":["React","useState","Entypo","AntDesign","styles","AuthLayout","FormInput","TextButton","COLORS2","COLORS","validateEmail","useNavigation","SignIn","email","setEmail","password","setPassword","emailError","setEmailError","showPassword","setShowPassword","navigate","value","emailAppendContainer","height","width","color","grey","green","red","fontSize","passwordContainer","passwordAppendContainer","passwordAppendImage","fogotPasswordComponent","fogotPasswordText","signUpContainer"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/pages/users/SignIn/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { Entypo, AntDesign } from 'react-native-vector-icons';\r\n\r\nimport styles from './styles';\r\nimport { AuthLayout, FormInput, TextButton } from '../../../components';\r\nimport { COLORS2 as COLORS, validateEmail } from '../../../utils';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const { navigate } = useNavigation();\r\n\r\n  return (\r\n    <AuthLayout title=\"Sign In\">\r\n      <FormInput\r\n        label=\"Email\"\r\n        keyboardType=\"email-address\"\r\n        autoCompleteType=\"email\"\r\n        onChange={value => {\r\n          validateEmail(value, setEmailError);\r\n\r\n          setEmail(value);\r\n        }}\r\n        errorMsg={emailError}\r\n        appendComponent={\r\n          <View style={styles.emailAppendContainer}>\r\n            <AntDesign\r\n              name={'checkcircle'}\r\n              style={{\r\n                height: 20,\r\n                width: 20,\r\n                color:\r\n                  email === ''\r\n                    ? COLORS.grey\r\n                    : email !== '' && emailError === ''\r\n                    ? COLORS.green\r\n                    : COLORS.red,\r\n                fontSize: 21,\r\n              }}\r\n            />\r\n          </View>\r\n        }\r\n      />\r\n\r\n      <FormInput\r\n        label=\"Password\"\r\n        secureTextEntry={!showPassword}\r\n        autoCompleteType=\"password\"\r\n        containerStyle={styles.passwordContainer}\r\n        onChange={value => setPassword(value)}\r\n        appendComponent={\r\n          <TouchableOpacity\r\n            style={styles.passwordAppendContainer}\r\n            onPress={() => setShowPassword(!showPassword)}\r\n          >\r\n            <Entypo\r\n              name={showPassword ? 'eye-with-line' : 'eye'}\r\n              style={styles.passwordAppendImage}\r\n            />\r\n          </TouchableOpacity>\r\n        }\r\n      />\r\n\r\n      <TextButton\r\n        // onPress={() => navigate('Forgot Password')}\r\n        text=\"Forgot Password?\"\r\n        containerStyle={styles.fogotPasswordComponent}\r\n        touchStyle={null}\r\n        textStyle={styles.fogotPasswordText}\r\n      />\r\n\r\n      <TextButton onPress={() => {}} text=\"Sign In\" />\r\n\r\n      <View style={styles.signUpContainer}>\r\n        <Text>Don't have an account? </Text>\r\n\r\n        <TextButton\r\n          // onPress={() => navigate('Forgot Password')}\r\n          text=\"Sign Up\"\r\n          containerStyle={styles.fogotPasswordComponent}\r\n          touchStyle={null}\r\n          textStyle={styles.fogotPasswordText}\r\n        />\r\n      </View>\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}