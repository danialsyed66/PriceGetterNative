{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Entypo, AntDesign } from \"@expo/vector-icons\";\nimport styles from \"./styles\";\nimport { AuthLayout, FormInput, Nav, TextButton } from \"../../../components\";\nimport { COLORS, validateEmail } from \"../../../utils\";\nimport { useNavigation } from '@react-navigation/native';\nimport { login } from \"../../../redux/actions/authActions\";\nimport { useDispatch } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar SignIn = function SignIn() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailError = _useState6[0],\n      setEmailError = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordError = _useState8[0],\n      setPasswordError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showPassword = _useState10[0],\n      setShowPassword = _useState10[1];\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var dispatch = useDispatch();\n\n  var handleLogin = function handleLogin() {\n    console.log(email, password);\n    if (password === '' && passwordError !== '') setPasswordError('Pasword is Required.');\n    if (email === '' && emailError !== '') setEmailError('Email is Required.');\n    console.log('login');\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(AuthLayout, {\n      title: \"Sign In\",\n      children: [_jsx(FormInput, {\n        label: \"Email\",\n        containerStyle: styles.emailComponent,\n        keyboardType: \"email-address\",\n        autoCompleteType: \"email\",\n        onChange: function onChange(value) {\n          validateEmail(value, setEmailError);\n          setEmail(value);\n        },\n        errorMsg: emailError,\n        appendComponent: _jsx(View, {\n          style: styles.emailAppendContainer,\n          children: _jsx(AntDesign, {\n            name: 'checkcircle',\n            style: {\n              height: 25,\n              width: 30,\n              color: email === '' ? COLORS.grey : email !== '' && emailError === '' ? COLORS.green : COLORS.red,\n              fontSize: 21\n            }\n          })\n        })\n      }), _jsx(FormInput, {\n        label: \"Password\",\n        secureTextEntry: !showPassword,\n        autoCompleteType: \"password\",\n        containerStyle: styles.passwordContainer,\n        onChange: function onChange(value) {\n          return setPassword(value);\n        },\n        appendComponent: _jsx(TouchableOpacity, {\n          style: styles.passwordAppendContainer,\n          onPress: function onPress() {\n            return setShowPassword(!showPassword);\n          },\n          children: _jsx(Entypo, {\n            name: showPassword ? 'eye-with-line' : 'eye',\n            style: styles.passwordAppendImage\n          })\n        })\n      }), _jsx(TextButton, {\n        text: \"Forgot Password?\",\n        containerStyle: styles.fogotPasswordComponent,\n        touchStyle: null,\n        textStyle: styles.fogotPasswordText\n      }), _jsx(TextButton, {\n        onPress: handleLogin,\n        text: \"Sign In\"\n      }), _jsxs(View, {\n        style: styles.signUpContainer,\n        children: [_jsx(Text, {\n          style: styles.signUpText,\n          children: \"Don't have an account? \"\n        }), _jsx(TextButton, {\n          onPress: function onPress() {\n            return navigate('Sign Up');\n          },\n          text: \"Sign Up\",\n          containerStyle: null,\n          touchStyle: null,\n          textStyle: styles.signUpButtonText\n        })]\n      })]\n    }), _jsx(Nav, {})]\n  });\n};\n\nexport default SignIn;","map":{"version":3,"names":["React","useState","Entypo","AntDesign","styles","AuthLayout","FormInput","Nav","TextButton","COLORS","validateEmail","useNavigation","login","useDispatch","SignIn","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","showPassword","setShowPassword","navigate","dispatch","handleLogin","console","log","emailComponent","value","emailAppendContainer","height","width","color","grey","green","red","fontSize","passwordContainer","passwordAppendContainer","passwordAppendImage","fogotPasswordComponent","fogotPasswordText","signUpContainer","signUpText","signUpButtonText"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/pages/users/SignIn/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { Entypo, AntDesign } from 'react-native-vector-icons';\r\n\r\nimport styles from './styles';\r\nimport { AuthLayout, FormInput, Nav, TextButton } from '../../../components';\r\nimport { COLORS, validateEmail } from '../../../utils';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { login } from '../../../redux/actions/authActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const { navigate } = useNavigation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = () => {\r\n    console.log(email, password);\r\n    if (password === '' && passwordError !== '')\r\n      setPasswordError('Pasword is Required.');\r\n    if (email === '' && emailError !== '') setEmailError('Email is Required.');\r\n\r\n    console.log('login');\r\n    // dispatch(login());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthLayout title=\"Sign In\">\r\n        <FormInput\r\n          label=\"Email\"\r\n          containerStyle={styles.emailComponent}\r\n          keyboardType=\"email-address\"\r\n          autoCompleteType=\"email\"\r\n          onChange={value => {\r\n            validateEmail(value, setEmailError);\r\n\r\n            setEmail(value);\r\n          }}\r\n          errorMsg={emailError}\r\n          appendComponent={\r\n            <View style={styles.emailAppendContainer}>\r\n              <AntDesign\r\n                name={'checkcircle'}\r\n                style={{\r\n                  height: 25,\r\n                  width: 30,\r\n                  color:\r\n                    email === ''\r\n                      ? COLORS.grey\r\n                      : email !== '' && emailError === ''\r\n                      ? COLORS.green\r\n                      : COLORS.red,\r\n                  fontSize: 21,\r\n                }}\r\n              />\r\n            </View>\r\n          }\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Password\"\r\n          secureTextEntry={!showPassword}\r\n          autoCompleteType=\"password\"\r\n          containerStyle={styles.passwordContainer}\r\n          onChange={value => setPassword(value)}\r\n          appendComponent={\r\n            <TouchableOpacity\r\n              style={styles.passwordAppendContainer}\r\n              onPress={() => setShowPassword(!showPassword)}\r\n            >\r\n              <Entypo\r\n                name={showPassword ? 'eye-with-line' : 'eye'}\r\n                style={styles.passwordAppendImage}\r\n              />\r\n            </TouchableOpacity>\r\n          }\r\n        />\r\n\r\n        <TextButton\r\n          // onPress={() => navigate('Forgot Password')}\r\n          text=\"Forgot Password?\"\r\n          containerStyle={styles.fogotPasswordComponent}\r\n          touchStyle={null}\r\n          textStyle={styles.fogotPasswordText}\r\n        />\r\n\r\n        <TextButton onPress={handleLogin} text=\"Sign In\" />\r\n\r\n        <View style={styles.signUpContainer}>\r\n          <Text style={styles.signUpText}>Don't have an account? </Text>\r\n\r\n          <TextButton\r\n            onPress={() => navigate('Sign Up')}\r\n            text=\"Sign Up\"\r\n            containerStyle={null}\r\n            touchStyle={null}\r\n            textStyle={styles.signUpButtonText}\r\n          />\r\n        </View>\r\n      </AuthLayout>\r\n\r\n      <Nav />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}