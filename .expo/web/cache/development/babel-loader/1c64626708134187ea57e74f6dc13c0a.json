{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { useNavigation } from '@react-navigation/native';\nimport { COLORS } from \"../../../utils\";\nimport styles from \"./styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Product = function Product(_ref) {\n  var _ref$product = _ref.product,\n      id = _ref$product.id,\n      category = _ref$product.category,\n      productName = _ref$product.productName,\n      productPrice = _ref$product.productPrice,\n      description = _ref$product.description,\n      isOff = _ref$product.isOff,\n      offPercentage = _ref$product.offPercentage,\n      productImage = _ref$product.productImage,\n      isAvailable = _ref$product.isAvailable,\n      productImageList = _ref$product.productImageList;\n  var color = isAvailable ? COLORS.green : COLORS.red;\n  var stock = isAvailable ? ' Available' : ' Unavailable';\n  var navigation = useNavigation();\n  return _jsxs(TouchableOpacity, {\n    style: styles.container,\n    onPress: function onPress() {\n      return navigation.navigate('Product Details', {\n        id: id\n      });\n    },\n    children: [_jsxs(View, {\n      style: styles.imageContainer,\n      children: [isOff && _jsx(View, {\n        style: styles.discount,\n        children: _jsxs(Text, {\n          style: styles.discountText,\n          children: [offPercentage, \"%\"]\n        })\n      }), _jsx(Image, {\n        style: styles.image,\n        source: productImage\n      })]\n    }), _jsx(Text, {\n      style: styles.name,\n      children: productName\n    }), _jsxs(View, {\n      style: styles.stockContainer,\n      children: [_jsx(FontAwesome, {\n        style: [styles.stockIcon, {\n          color: color\n        }],\n        name: \"circle\"\n      }), _jsx(Text, {\n        style: [styles.stock, {\n          color: color\n        }],\n        children: stock\n      })]\n    }), _jsxs(Text, {\n      style: styles.price,\n      children: [\"Rs. \", productPrice]\n    })]\n  });\n};\n\nexport default Product;","map":{"version":3,"names":["React","FontAwesome","useNavigation","COLORS","styles","Product","product","id","category","productName","productPrice","description","isOff","offPercentage","productImage","isAvailable","productImageList","color","green","red","stock","navigation","container","navigate","imageContainer","discount","discountText","image","name","stockContainer","stockIcon","price"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/components/products/Product/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { COLORS } from '../../../utils';\r\n\r\nimport styles from './styles';\r\n\r\nconst Product = ({\r\n  product: {\r\n    id,\r\n    category,\r\n    productName,\r\n    productPrice,\r\n    description,\r\n    isOff,\r\n    offPercentage,\r\n    productImage,\r\n    isAvailable,\r\n    productImageList,\r\n  },\r\n}) => {\r\n  const color = isAvailable ? COLORS.green : COLORS.red;\r\n  const stock = isAvailable ? ' Available' : ' Unavailable';\r\n\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.container}\r\n      onPress={() => navigation.navigate('Product Details', { id })}\r\n    >\r\n      <View style={styles.imageContainer}>\r\n        {isOff && (\r\n          <View style={styles.discount}>\r\n            <Text style={styles.discountText}>{offPercentage}%</Text>\r\n          </View>\r\n        )}\r\n        <Image style={styles.image} source={productImage} />\r\n      </View>\r\n\r\n      <Text style={styles.name}>{productName}</Text>\r\n\r\n      <View style={styles.stockContainer}>\r\n        <FontAwesome style={[styles.stockIcon, { color }]} name=\"circle\" />\r\n        <Text style={[styles.stock, { color }]}>{stock}</Text>\r\n      </View>\r\n      <Text style={styles.price}>Rs. {productPrice}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,WAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,MAAT;AAEA,OAAOC,MAAP;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAaV;EAAA,wBAZJC,OAYI;EAAA,IAXFC,EAWE,gBAXFA,EAWE;EAAA,IAVFC,QAUE,gBAVFA,QAUE;EAAA,IATFC,WASE,gBATFA,WASE;EAAA,IARFC,YAQE,gBARFA,YAQE;EAAA,IAPFC,WAOE,gBAPFA,WAOE;EAAA,IANFC,KAME,gBANFA,KAME;EAAA,IALFC,aAKE,gBALFA,aAKE;EAAA,IAJFC,YAIE,gBAJFA,YAIE;EAAA,IAHFC,WAGE,gBAHFA,WAGE;EAAA,IAFFC,gBAEE,gBAFFA,gBAEE;EACJ,IAAMC,KAAK,GAAGF,WAAW,GAAGZ,MAAM,CAACe,KAAV,GAAkBf,MAAM,CAACgB,GAAlD;EACA,IAAMC,KAAK,GAAGL,WAAW,GAAG,YAAH,GAAkB,cAA3C;EAEA,IAAMM,UAAU,GAAGnB,aAAa,EAAhC;EAEA,OACE,MAAC,gBAAD;IACE,KAAK,EAAEE,MAAM,CAACkB,SADhB;IAEE,OAAO,EAAE;MAAA,OAAMD,UAAU,CAACE,QAAX,CAAoB,iBAApB,EAAuC;QAAEhB,EAAE,EAAFA;MAAF,CAAvC,CAAN;IAAA,CAFX;IAAA,WAIE,MAAC,IAAD;MAAM,KAAK,EAAEH,MAAM,CAACoB,cAApB;MAAA,WACGZ,KAAK,IACJ,KAAC,IAAD;QAAM,KAAK,EAAER,MAAM,CAACqB,QAApB;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAErB,MAAM,CAACsB,YAApB;UAAA,WAAmCb,aAAnC;QAAA;MADF,EAFJ,EAME,KAAC,KAAD;QAAO,KAAK,EAAET,MAAM,CAACuB,KAArB;QAA4B,MAAM,EAAEb;MAApC,EANF;IAAA,EAJF,EAaE,KAAC,IAAD;MAAM,KAAK,EAAEV,MAAM,CAACwB,IAApB;MAAA,UAA2BnB;IAA3B,EAbF,EAeE,MAAC,IAAD;MAAM,KAAK,EAAEL,MAAM,CAACyB,cAApB;MAAA,WACE,KAAC,WAAD;QAAa,KAAK,EAAE,CAACzB,MAAM,CAAC0B,SAAR,EAAmB;UAAEb,KAAK,EAALA;QAAF,CAAnB,CAApB;QAAmD,IAAI,EAAC;MAAxD,EADF,EAEE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACb,MAAM,CAACgB,KAAR,EAAe;UAAEH,KAAK,EAALA;QAAF,CAAf,CAAb;QAAA,UAAyCG;MAAzC,EAFF;IAAA,EAfF,EAmBE,MAAC,IAAD;MAAM,KAAK,EAAEhB,MAAM,CAAC2B,KAApB;MAAA,mBAAgCrB,YAAhC;IAAA,EAnBF;EAAA,EADF;AAuBD,CA1CD;;AA4CA,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}