{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { COLORS, ICONS } from \"../../../utils\";\nimport TextButton from \"../../TextButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FormInput = function FormInput(_ref) {\n  var containerStyle = _ref.containerStyle,\n      placeholder = _ref.placeholder,\n      inputStyle = _ref.inputStyle,\n      onChange = _ref.onChange,\n      secureTextEntry = _ref.secureTextEntry,\n      _ref$keyboardType = _ref.keyboardType,\n      keyboardType = _ref$keyboardType === void 0 ? 'default' : _ref$keyboardType,\n      _ref$autoCompleteType = _ref.autoCompleteType,\n      autoCompleteType = _ref$autoCompleteType === void 0 ? 'off' : _ref$autoCompleteType,\n      _ref$autoCapitalize = _ref.autoCapitalize,\n      autoCapitalize = _ref$autoCapitalize === void 0 ? 'none' : _ref$autoCapitalize;\n  return _jsxs(View, {\n    style: [styles.container, containerStyle],\n    children: [_jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        style: [styles.input, inputStyle],\n        placeholder: placeholder,\n        placeholderTextColor: COLORS.gray,\n        secureTextEntry: secureTextEntry,\n        keyboardType: keyboardType,\n        autoCompleteType: autoCompleteType,\n        autoCapitalize: autoCapitalize,\n        onChangeText: function onChangeText(text) {\n          return onChange(text);\n        }\n      })\n    }), _jsxs(TouchableOpacity, {\n      style: styles.filterContainer,\n      onPress: function onPress() {},\n      children: [_jsx(Image, {\n        source: ICONS.filter,\n        style: styles.filterImage\n      }), _jsx(Feather, {\n        name: \"sliders\"\n      })]\n    }), _jsx(TextButton, {\n      text: \"Search\",\n      containerStyle: styles.searchContainer,\n      touchStyle: styles.searchTouch\n    })]\n  });\n};\n\nexport default FormInput;","map":{"version":3,"names":["React","styles","COLORS","ICONS","TextButton","FormInput","containerStyle","placeholder","inputStyle","onChange","secureTextEntry","keyboardType","autoCompleteType","autoCapitalize","container","inputContainer","input","gray","text","filterContainer","filter","filterImage","searchContainer","searchTouch"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/components/products/Search/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport { View, TextInput, TouchableOpacity, Image } from 'react-native';\r\n\r\nimport styles from './styles';\r\nimport { COLORS, ICONS } from '../../../utils';\r\nimport TextButton from '../../TextButton';\r\n\r\nconst FormInput = ({\r\n  containerStyle,\r\n  placeholder,\r\n  inputStyle,\r\n  onChange,\r\n  secureTextEntry,\r\n  keyboardType = 'default',\r\n  autoCompleteType = 'off',\r\n  autoCapitalize = 'none',\r\n}) => {\r\n  return (\r\n    <View style={[styles.container, containerStyle]}>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={[styles.input, inputStyle]}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={COLORS.gray}\r\n          secureTextEntry={secureTextEntry}\r\n          keyboardType={keyboardType}\r\n          autoCompleteType={autoCompleteType}\r\n          autoCapitalize={autoCapitalize}\r\n          onChangeText={text => onChange(text)}\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity\r\n        style={styles.filterContainer}\r\n        onPress={() => {\r\n          //Open Filters Model\r\n        }}\r\n      >\r\n        <Image source={ICONS.filter} style={styles.filterImage} />\r\n        <Feather name=\"sliders\" />\r\n      </TouchableOpacity>\r\n\r\n      <TextButton\r\n        text=\"Search\"\r\n        containerStyle={styles.searchContainer}\r\n        touchStyle={styles.searchTouch}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,OAAOC,MAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB;AACA,OAAOC,UAAP;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OASZ;EAAA,IARJC,cAQI,QARJA,cAQI;EAAA,IAPJC,WAOI,QAPJA,WAOI;EAAA,IANJC,UAMI,QANJA,UAMI;EAAA,IALJC,QAKI,QALJA,QAKI;EAAA,IAJJC,eAII,QAJJA,eAII;EAAA,6BAHJC,YAGI;EAAA,IAHJA,YAGI,kCAHW,SAGX;EAAA,iCAFJC,gBAEI;EAAA,IAFJA,gBAEI,sCAFe,KAEf;EAAA,+BADJC,cACI;EAAA,IADJA,cACI,oCADa,MACb;EACJ,OACE,MAAC,IAAD;IAAM,KAAK,EAAE,CAACZ,MAAM,CAACa,SAAR,EAAmBR,cAAnB,CAAb;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEL,MAAM,CAACc,cAApB;MAAA,UACE,KAAC,SAAD;QACE,KAAK,EAAE,CAACd,MAAM,CAACe,KAAR,EAAeR,UAAf,CADT;QAEE,WAAW,EAAED,WAFf;QAGE,oBAAoB,EAAEL,MAAM,CAACe,IAH/B;QAIE,eAAe,EAAEP,eAJnB;QAKE,YAAY,EAAEC,YALhB;QAME,gBAAgB,EAAEC,gBANpB;QAOE,cAAc,EAAEC,cAPlB;QAQE,YAAY,EAAE,sBAAAK,IAAI;UAAA,OAAIT,QAAQ,CAACS,IAAD,CAAZ;QAAA;MARpB;IADF,EADF,EAcE,MAAC,gBAAD;MACE,KAAK,EAAEjB,MAAM,CAACkB,eADhB;MAEE,OAAO,EAAE,mBAAM,CAEd,CAJH;MAAA,WAME,KAAC,KAAD;QAAO,MAAM,EAAEhB,KAAK,CAACiB,MAArB;QAA6B,KAAK,EAAEnB,MAAM,CAACoB;MAA3C,EANF,EAOE,KAAC,OAAD;QAAS,IAAI,EAAC;MAAd,EAPF;IAAA,EAdF,EAwBE,KAAC,UAAD;MACE,IAAI,EAAC,QADP;MAEE,cAAc,EAAEpB,MAAM,CAACqB,eAFzB;MAGE,UAAU,EAAErB,MAAM,CAACsB;IAHrB,EAxBF;EAAA,EADF;AAgCD,CA1CD;;AA4CA,eAAelB,SAAf"},"metadata":{},"sourceType":"module"}