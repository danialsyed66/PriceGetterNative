{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport asyncStorage from '@react-native-async-storage/async-storage';\nimport { INIT } from \"../consts\";\nexport var init = function init() {\n  return function _callee(dispatch) {\n    var data, _cartItems, _shippingInfo;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(asyncStorage.multiGet(['cartItems', 'shippingInfo']));\n\n          case 3:\n            data = _context.sent;\n            _cartItems = JSON.parse(data[0] || '[]');\n            _shippingInfo = JSON.parse(data[1] || '{}');\n            console.log(1, _cartItems, _shippingInfo);\n            dispatch({\n              type: INIT,\n              payload: {\n                cartItems: data[0],\n                shippingInfo: data[1]\n              }\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: INIT,\n              payload: {\n                cartItems: cartItems,\n                shippingInfo: shippingInfo\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};","map":{"version":3,"names":["asyncStorage","INIT","init","dispatch","multiGet","data","cartItems","JSON","parse","shippingInfo","console","log","type","payload"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/redux/actions/initAction.js"],"sourcesContent":["import asyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport { INIT } from '../consts';\r\n\r\nexport const init = () => async dispatch => {\r\n  try {\r\n    const data = await asyncStorage.multiGet(['cartItems', 'shippingInfo']);\r\n\r\n    const cartItems = JSON.parse(data[0] || '[]');\r\n    const shippingInfo = JSON.parse(data[1] || '{}');\r\n\r\n    console.log(1, cartItems, shippingInfo);\r\n\r\n    dispatch({\r\n      type: INIT,\r\n      payload: { cartItems: data[0], shippingInfo: data[1] },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: INIT,\r\n      payload: { cartItems, shippingInfo },\r\n    });\r\n  }\r\n};\r\n"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,SAASC,IAAT;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO;EAAA,OAAM,iBAAMC,QAAN;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEHH,YAAY,CAACI,QAAb,CAAsB,CAAC,WAAD,EAAc,cAAd,CAAtB,CAFG;;UAAA;YAEhBC,IAFgB;YAIhBC,UAJgB,GAIJC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAAC,CAAD,CAAJ,IAAW,IAAtB,CAJI;YAKhBI,aALgB,GAKDF,IAAI,CAACC,KAAL,CAAWH,IAAI,CAAC,CAAD,CAAJ,IAAW,IAAtB,CALC;YAOtBK,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeL,UAAf,EAA0BG,aAA1B;YAEAN,QAAQ,CAAC;cACPS,IAAI,EAAEX,IADC;cAEPY,OAAO,EAAE;gBAAEP,SAAS,EAAED,IAAI,CAAC,CAAD,CAAjB;gBAAsBI,YAAY,EAAEJ,IAAI,CAAC,CAAD;cAAxC;YAFF,CAAD,CAAR;YATsB;YAAA;;UAAA;YAAA;YAAA;YActBF,QAAQ,CAAC;cACPS,IAAI,EAAEX,IADC;cAEPY,OAAO,EAAE;gBAAEP,SAAS,EAATA,SAAF;gBAAaG,YAAY,EAAZA;cAAb;YAFF,CAAD,CAAR;;UAdsB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAN;AAAA,CAAb"},"metadata":{},"sourceType":"module"}