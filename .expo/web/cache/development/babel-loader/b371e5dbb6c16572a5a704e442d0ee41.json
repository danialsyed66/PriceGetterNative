{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Entypo, AntDesign } from \"@expo/vector-icons\";\nimport styles from \"./styles\";\nimport { AuthLayout, FormInput, Nav, TextButton } from \"../../../components\";\nimport { COLORS, validateEmail, validatePassword } from \"../../../utils\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar SignIn = function SignIn() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailError = _useState6[0],\n      setEmailError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPassword = _useState8[0],\n      setShowPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showConfirmPassword = _useState10[0],\n      setShowConfirmPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      nameError = _useState14[0],\n      setNameError = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      confirmPassword = _useState16[0],\n      setConfirmPassword = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      passwordError = _useState18[0],\n      setPasswordError = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      confirmPasswordError = _useState20[0],\n      setConfirmPasswordError = _useState20[1];\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(AuthLayout, {\n      title: \"Sign Up\",\n      titleContainerStyle: styles.title,\n      children: [_jsx(FormInput, {\n        label: \"Name\",\n        containerStyle: styles.emailComponent,\n        keyboardType: \"username\",\n        autoCompleteType: \"username\",\n        onChange: function onChange(value) {\n          return setName(value);\n        },\n        errorMsg: nameError,\n        appendComponent: _jsx(View, {\n          style: styles.emailAppendContainer,\n          children: _jsx(AntDesign, {\n            name: 'checkcircle',\n            style: {\n              height: 25,\n              width: 30,\n              fontSize: 21,\n              color: name === '' && nameError === '' ? COLORS.grey : name !== '' ? COLORS.green : COLORS.red\n            }\n          })\n        })\n      }), _jsx(FormInput, {\n        label: \"Email\",\n        containerStyle: styles.emailComponent,\n        keyboardType: \"email-address\",\n        autoCompleteType: \"email\",\n        onChange: function onChange(value) {\n          validateEmail(value, setEmailError);\n          setEmail(value);\n        },\n        errorMsg: emailError,\n        appendComponent: _jsx(View, {\n          style: styles.emailAppendContainer,\n          children: _jsx(AntDesign, {\n            name: 'checkcircle',\n            style: {\n              height: 25,\n              width: 30,\n              color: email === '' ? COLORS.grey : email !== '' && emailError === '' ? COLORS.green : COLORS.red,\n              fontSize: 21\n            }\n          })\n        })\n      }), _jsx(FormInput, {\n        label: \"Password\",\n        secureTextEntry: !showPassword,\n        autoCompleteType: \"password\",\n        containerStyle: styles.passwordContainer,\n        onChange: function onChange(value) {\n          validatePassword(value);\n          setPassword(value);\n        },\n        errorMsg: passwordError,\n        appendComponent: _jsx(TouchableOpacity, {\n          style: styles.passwordAppendContainer,\n          onPress: function onPress() {\n            return setShowPassword(!showPassword);\n          },\n          children: _jsx(Entypo, {\n            name: showPassword ? 'eye-with-line' : 'eye',\n            style: styles.passwordAppendImage\n          })\n        })\n      }), _jsx(FormInput, {\n        label: \"Confirm Password\",\n        secureTextEntry: !showConfirmPassword,\n        autoCompleteType: \"password\",\n        containerStyle: styles.passwordContainer,\n        onChange: function onChange(value) {\n          setConfirmPasswordError('');\n          if (password !== value) setConfirmPasswordError('You Passwords donot match');\n          setConfirmPassword(value);\n        },\n        errorMsg: confirmPasswordError,\n        appendComponent: _jsx(TouchableOpacity, {\n          style: styles.passwordAppendContainer,\n          onPress: function onPress() {\n            return setShowPassword(!showPassword);\n          },\n          children: _jsx(Entypo, {\n            name: showPassword ? 'eye-with-line' : 'eye',\n            style: styles.passwordAppendImage\n          })\n        })\n      }), _jsx(TextButton, {\n        onPress: function onPress() {},\n        text: \"Sign Up\"\n      }), _jsxs(View, {\n        style: styles.signUpContainer,\n        children: [_jsx(Text, {\n          style: styles.signUpText,\n          children: \"Already have an account? \"\n        }), _jsx(TextButton, {\n          onPress: function onPress() {\n            return navigate('Sign In');\n          },\n          text: \"Sign In\",\n          containerStyle: null,\n          touchStyle: null,\n          textStyle: styles.signUpButtonText\n        })]\n      })]\n    }), _jsx(Nav, {})]\n  });\n};\n\nexport default SignIn;","map":{"version":3,"names":["React","useState","Entypo","AntDesign","styles","AuthLayout","FormInput","Nav","TextButton","COLORS","validateEmail","validatePassword","useNavigation","SignIn","email","setEmail","password","setPassword","emailError","setEmailError","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","name","setName","nameError","setNameError","confirmPassword","setConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","navigate","title","emailComponent","value","emailAppendContainer","height","width","fontSize","color","grey","green","red","passwordContainer","passwordAppendContainer","passwordAppendImage","signUpContainer","signUpText","signUpButtonText"],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/pages/users/SignUp/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { Entypo, AntDesign } from 'react-native-vector-icons';\r\n\r\nimport styles from './styles';\r\nimport { AuthLayout, FormInput, Nav, TextButton } from '../../../components';\r\nimport { COLORS, validateEmail, validatePassword } from '../../../utils';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [nameError, setNameError] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\r\n\r\n  const { navigate } = useNavigation();\r\n\r\n  return (\r\n    <>\r\n      <AuthLayout title=\"Sign Up\" titleContainerStyle={styles.title}>\r\n        <FormInput\r\n          label=\"Name\"\r\n          containerStyle={styles.emailComponent}\r\n          keyboardType=\"username\"\r\n          autoCompleteType=\"username\"\r\n          onChange={value => setName(value)}\r\n          errorMsg={nameError}\r\n          appendComponent={\r\n            <View style={styles.emailAppendContainer}>\r\n              <AntDesign\r\n                name={'checkcircle'}\r\n                style={{\r\n                  height: 25,\r\n                  width: 30,\r\n                  fontSize: 21,\r\n                  color:\r\n                    name === '' && nameError === ''\r\n                      ? COLORS.grey\r\n                      : name !== ''\r\n                      ? COLORS.green\r\n                      : COLORS.red,\r\n                }}\r\n              />\r\n            </View>\r\n          }\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Email\"\r\n          containerStyle={styles.emailComponent}\r\n          keyboardType=\"email-address\"\r\n          autoCompleteType=\"email\"\r\n          onChange={value => {\r\n            validateEmail(value, setEmailError);\r\n\r\n            setEmail(value);\r\n          }}\r\n          errorMsg={emailError}\r\n          appendComponent={\r\n            <View style={styles.emailAppendContainer}>\r\n              <AntDesign\r\n                name={'checkcircle'}\r\n                style={{\r\n                  height: 25,\r\n                  width: 30,\r\n                  color:\r\n                    email === ''\r\n                      ? COLORS.grey\r\n                      : email !== '' && emailError === ''\r\n                      ? COLORS.green\r\n                      : COLORS.red,\r\n                  fontSize: 21,\r\n                }}\r\n              />\r\n            </View>\r\n          }\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Password\"\r\n          secureTextEntry={!showPassword}\r\n          autoCompleteType=\"password\"\r\n          containerStyle={styles.passwordContainer}\r\n          onChange={value => {\r\n            validatePassword(value);\r\n\r\n            setPassword(value);\r\n          }}\r\n          errorMsg={passwordError}\r\n          appendComponent={\r\n            <TouchableOpacity\r\n              style={styles.passwordAppendContainer}\r\n              onPress={() => setShowPassword(!showPassword)}\r\n            >\r\n              <Entypo\r\n                name={showPassword ? 'eye-with-line' : 'eye'}\r\n                style={styles.passwordAppendImage}\r\n              />\r\n            </TouchableOpacity>\r\n          }\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Confirm Password\"\r\n          secureTextEntry={!showConfirmPassword}\r\n          autoCompleteType=\"password\"\r\n          containerStyle={styles.passwordContainer}\r\n          onChange={value => {\r\n            setConfirmPasswordError('');\r\n\r\n            if (password !== value)\r\n              setConfirmPasswordError('You Passwords donot match');\r\n\r\n            setConfirmPassword(value);\r\n          }}\r\n          errorMsg={confirmPasswordError}\r\n          appendComponent={\r\n            <TouchableOpacity\r\n              style={styles.passwordAppendContainer}\r\n              onPress={() => setShowPassword(!showPassword)}\r\n            >\r\n              <Entypo\r\n                name={showPassword ? 'eye-with-line' : 'eye'}\r\n                style={styles.passwordAppendImage}\r\n              />\r\n            </TouchableOpacity>\r\n          }\r\n        />\r\n\r\n        <TextButton onPress={() => {}} text=\"Sign Up\" />\r\n\r\n        <View style={styles.signUpContainer}>\r\n          <Text style={styles.signUpText}>Already have an account? </Text>\r\n\r\n          <TextButton\r\n            onPress={() => navigate('Sign In')}\r\n            text=\"Sign In\"\r\n            containerStyle={null}\r\n            touchStyle={null}\r\n            textStyle={styles.signUpButtonText}\r\n          />\r\n        </View>\r\n      </AuthLayout>\r\n\r\n      <Nav />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}