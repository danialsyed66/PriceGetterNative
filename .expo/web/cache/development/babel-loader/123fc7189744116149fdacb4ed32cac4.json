{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/DANIALSYED/OneDrive/Documents/GitHub/PriceGetterNative/node_modules/react-native-image-picker/src/types.ts"],"sourcesContent":["export type Callback = (response: ImagePickerResponse) => any;\n\nexport interface ImageLibraryOptions {\n  selectionLimit?: number;\n  mediaType: MediaType;\n  maxWidth?: number;\n  maxHeight?: number;\n  quality?: PhotoQuality;\n  videoQuality?: AndroidVideoOptions | iOSVideoOptions;\n  includeBase64?: boolean;\n  includeExtra?: boolean;\n  presentationStyle?:\n    | 'currentContext'\n    | 'fullScreen'\n    | 'pageSheet'\n    | 'formSheet'\n    | 'popover'\n    | 'overFullScreen'\n    | 'overCurrentContext';\n}\n\nexport interface CameraOptions\n  extends Omit<ImageLibraryOptions, 'selectionLimit'> {\n  durationLimit?: number;\n  saveToPhotos?: boolean;\n  cameraType?: CameraType;\n}\n\nexport interface Asset {\n  base64?: string;\n  uri?: string;\n  width?: number;\n  height?: number;\n  fileSize?: number;\n  type?: string;\n  fileName?: string;\n  duration?: number;\n  bitrate?: number;\n  timestamp?: string;\n  id?: string;\n}\n\nexport interface ImagePickerResponse {\n  didCancel?: boolean;\n  errorCode?: ErrorCode;\n  errorMessage?: string;\n  assets?: Asset[];\n}\n\nexport type PhotoQuality =\n  | 0\n  | 0.1\n  | 0.2\n  | 0.3\n  | 0.4\n  | 0.5\n  | 0.6\n  | 0.7\n  | 0.8\n  | 0.9\n  | 1;\nexport type CameraType = 'back' | 'front';\nexport type MediaType = 'photo' | 'video' | 'mixed';\nexport type AndroidVideoOptions = 'low' | 'high';\nexport type iOSVideoOptions = 'low' | 'medium' | 'high';\nexport type ErrorCode = 'camera_unavailable' | 'permission' | 'others';\n"],"mappings":""},"metadata":{},"sourceType":"script"}